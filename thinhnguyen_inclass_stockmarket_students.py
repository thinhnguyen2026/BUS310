# -*- coding: utf-8 -*-
"""ThinhNguyen_Inclass_StockMarket_students.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1JvJe-qCSh6YjlhXZA6qWwqpjTffSdyF8

# Import the library
"""

import numpy as np
import pandas as pd
from matplotlib.pyplot import subplots
import statsmodels.api as sm
!pip install ISLP
from ISLP import load_data
from ISLP.models import (ModelSpec as MS,
                         summarize)
from ISLP import confusion_table
from ISLP.models import contrast
from sklearn.discriminant_analysis import \
     (LinearDiscriminantAnalysis as LDA,
      QuadraticDiscriminantAnalysis as QDA)
from sklearn.naive_bayes import GaussianNB
from sklearn.neighbors import KNeighborsClassifier
from sklearn.preprocessing import StandardScaler
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression

"""# Load the data"""

Smarket = load_data('Smarket')
Smarket

"""##Step 1: Run logistic regression"""

Smarket.columns

Smarket.corr(numeric_only=True)

allvars = Smarket.columns.drop(['Today','Direction','Year']) #Define the prediction
X = MS(allvars).fit_transform(Smarket) #Define the X variables predictors
y = Smarket['Direction'] =='Up' #choose up variable because they are value == 1
glm = sm.GLM(y, X, family=sm.families.Binomial()) #glogistic regression
results = glm.fit() #nice result
print(results.summary()) #print the summary

probs = results.predict(X) #predict the probability
probs[:10] #print first 10 elements

"""if probability is larger than 0.5, classfied as up"""

labels = np.array(['Down']*1250)
labels[probs > 0.5] = 'Up'

"""###Confusion table is important for prediction"""

confusion_table(labels, Smarket.Direction) #print the confusion table

"""###% of Coreect Prediction"""

(507+145)/1250 #print the accuracy